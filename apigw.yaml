trigger:
  - main

pool:
  name: Default  # Ensure this is your self-hosted agent pool

variables:
  storageAccountName: 'stacc$(Build.BuildId)'
  fileShareName: 'myfileshare'
  localFilePath: 'C:\Users\mavishnoi\Downloads\license.lic'
  resourceGroup: 'RG-mavishnoi'
  containerAppName: 'mycontainerapp'
  existingContainerAppEnvironmentName: 'managedEnvironment-RGmavishnoi-91ac-21march'
  location: 'northeurope'
  dockerImage: 'manishvishnoi/gw22march:latest'
  azureSubscription: 'axwaymanishdepops1'

stages:
  - stage: CreateStorageAccount
    displayName: Create Storage Account
    jobs:
      - job: CreateStorageAccount
        steps:
          - task: AzureCLI@2
            displayName: 'Create Storage Account'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                az storage account create --name $(storageAccountName) --resource-group $(resourceGroup) --location $(location) --sku Standard_LRS --kind StorageV2

  - stage: CreateFileShare
    displayName: Create File Share
    jobs:
      - job: CreateFileShare
        steps:
          - task: AzureCLI@2
            displayName: 'Create File Share'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                # Get storage account key dynamically
                $storageKey = az storage account keys list --resource-group $(resourceGroup) --account-name $(storageAccountName) --query '[0].value' -o tsv

                # Create the file share if it doesn't exist
                $shareExists = az storage share exists --account-name $(storageAccountName) --account-key $storageKey --name $(fileShareName) --query 'exists' -o tsv
                if ($shareExists -eq 'false') {
                    az storage share create --account-name $(storageAccountName) --account-key $storageKey --name $(fileShareName)
                    Write-Host "File share $(fileShareName) created."
                } else {
                    Write-Host "File share $(fileShareName) already exists."
                }

  - stage: UploadFile
    displayName: Upload File to Azure File Share
    jobs:
      - job: UploadFile
        steps:
          - task: AzureCLI@2
            displayName: 'Upload File to Azure File Share'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                # Get the storage key dynamically
                $storageKey = az storage account keys list --resource-group $(resourceGroup) --account-name $(storageAccountName) --query '[0].value' -o tsv
                
                # Upload the file to Azure File Share
                az storage file upload --account-name $(storageAccountName) --account-key $storageKey --share-name $(fileShareName) --source "$(localFilePath)"

  - stage: DeployContainerApp
    displayName: Deploy Azure Resources (Container App)
    jobs:
      - job: DeployResources
        displayName: Deploy Bicep Template
        steps:
          - task: AzureCLI@2
            displayName: 'Deploy Bicep Template'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                az deployment group create --resource-group $(resourceGroup) --template-file ./apigw.bicep --parameters storageAccountName=$(storageAccountName) containerAppName=$(containerAppName) dockerImage=$(dockerImage) existingContainerAppEnvironmentName=$(existingContainerAppEnvironmentName) location=$(location)
